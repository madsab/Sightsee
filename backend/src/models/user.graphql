type User {
  id: ID!
  name: String!
  username: String!
  image: String
  password: String!
  reviews: [Review!]
  favorites: [Destination!]
}

type UserData {
  user: User!
  token: String!
}

scalar Upload

input UserInput {
  id: ID!
  name: String
  username: String
  image: Upload
  password: String
  reviews: [ReviewInput!]
  favorites: [DestinationInput!]
}

input LoginInput {
  username: String!
  password: String!
}

type Query {
  getUsers: [User!]
  getUsersByID(ids: [ID!]!): [User!]
  getUserByID(id: ID!): User
  getReviewsByUserID(id: ID!): [Review!]
}

type Mutation {
  createUser(name: String!, username: String!, password: String!): UserData!
  updateUser(user: UserInput!): User!
  deleteUser(id: ID!): User!
  login(data: LoginInput!): UserData!
  addReviewToUser(userID: ID!, reviewID: ID!): User!
}
