name: Deploy Application

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy Backend and Frontend
    runs-on: self-hosted

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.8.0'

      - name: Install common dependencies
        run: |
          npm install

      - name: Install and Build Backend
        working-directory: backend
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_IP: ${{ secrets.DB_IP }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          AWS_BUCKET_REGION: ${{ secrets.AWS_BUCKET_REGION }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          VITE_FRONTEND_URL: ${{ secrets.VITE_FRONTEND_URL }}

        run: |
          npm install
          npm run build

      - name: Install and Build Frontend
        working-directory: frontend
        env:
          VITE_BACKEND_URL: ${{ secrets.VITE_BACKEND_URL }}
        run: |
          npm install
          npm run build

      - name: Deploy Frontend
        run: |
          rsync -av --delete --exclude='.htaccess' ./frontend/dist/ /var/www/html/project2/

      - name: Deploy Backend
        run: |
          pm2 delete "backend-server" || true

          cat <<EOF > ecosystem.config.js
          module.exports = {
            apps: [{
              name: 'backend-server',
              script: 'node',
              args: '-r tsconfig-paths/register ./backend/dist/backend/src/server.js',
              env: {
                DB_USER: '${{ secrets.DB_USER }}',
                DB_IP: '${{ secrets.DB_IP }}',
                DB_PASSWORD: '${{ secrets.DB_PASSWORD }}',
                JWT_SECRET: '${{ secrets.JWT_SECRET }}',
                AWS_BUCKET_NAME: '${{ secrets.AWS_BUCKET_NAME }}',
                AWS_BUCKET_REGION: '${{ secrets.AWS_BUCKET_REGION }}',
                AWS_ACCESS_KEY: '${{ secrets.AWS_ACCESS_KEY }}',
                AWS_SECRET_KEY: '${{ secrets.AWS_SECRET_KEY }}',
                VITE_FRONTEND_URL: '${{ secrets.VITE_FRONTEND_URL }}',
                NODE_ENV: 'production'
              }
            }]
          };
          EOF

          pm2 start ecosystem.config.js
